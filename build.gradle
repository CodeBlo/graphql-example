/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id "com.netflix.dgs.codegen" version "5.1.17"
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.0'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.7.0'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.0'
    implementation 'com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter:5.0.3'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools:2.7.0'
    runtimeOnly 'com.h2database:h2:2.1.212'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'graphql'

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

generateJava{
    schemaPaths = ["${projectDir}/src/main/resources/schema"] // List of directories containing schema files
    packageName = 'com.example.graphql' // The package name to use to generate sources
    generateClient = false // Enable generating the type safe query API
}
